<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Advanced Text to Audio Converter</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.21/mammoth.browser.min.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #F5F5F5;
      display: flex;
      justify-content: center;
      padding: 30px 0;
      margin: 0;
    }
    .container {
      background-color: #FFFFFF;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 8px 20px rgba(0,0,0,0.1);
      width: 90%;
      max-width: 650px;
    }
    h1 {
      text-align: center;
      color: #0A1F44;
      margin-bottom: 25px;
      font-size: 28px;
    }
    label {
      font-weight: bold;
      margin-bottom: 5px;
      display: block;
    }
    textarea {
      width: 100%;
      padding: 12px;
      border-radius: 10px;
      border: 1px solid #ccc;
      font-size: 16px;
      resize: vertical;
      min-height: 120px;
      margin-bottom: 15px;
    }
    input[type="file"] {
      margin-bottom: 20px;
    }
    select, input[type="range"] {
      width: 100%;
      padding: 8px;
      border-radius: 8px;
      border: 1px solid #ccc;
      margin-bottom: 15px;
    }
    .slider-value {
      float: right;
      font-weight: bold;
    }
    .controls {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
      margin-bottom: 20px;
    }
    .controls button {
      background-color: #00BFAE;
      color: #fff;
      border: none;
      padding: 12px;
      border-radius: 10px;
      cursor: pointer;
      flex: 1 1 22%;
      margin: 5px 0;
      transition: 0.3s;
      font-size: 16px;
    }
    .controls button:hover {
      background-color: #009e92;
    }
    .about {
      margin-top: 30px;
      font-size: 14px;
      color: #333;
      border-top: 1px solid #ccc;
      padding-top: 15px;
    }
    @media (max-width: 500px) {
      .controls button {
        flex: 1 1 48%;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Advanced Text to Audio Converter</h1>

    <label for="textInput">Enter Text or Upload File:</label>
    <textarea id="textInput" placeholder="Type or upload text here..."></textarea>
    <input type="file" id="fileInput" accept=".txt,.docx">

    <label for="voiceSelect">Choose Voice:</label>
    <select id="voiceSelect"></select>

    <label for="rate">Speech Rate: <span id="rateValue">1</span></label>
    <input type="range" id="rate" min="0.5" max="2" step="0.1" value="1">

    <label for="pitch">Pitch: <span id="pitchValue">1</span></label>
    <input type="range" id="pitch" min="0" max="2" step="0.1" value="1">

    <div class="controls">
      <button id="playBtn">Play</button>
      <button id="pauseBtn">Pause</button>
      <button id="resumeBtn">Resume</button>
      <button id="stopBtn">Stop</button>
      <button id="rewindBtn">Rewind</button>
    </div>

    <div class="about">
      <p><strong>Developed by:</strong> Rigen Das</p>
      <p><strong>Contact:</strong> rigendas_cse30d@portcity.edu.bd</p>
    </div>
  </div>

  <script>
    const textInput = document.getElementById('textInput');
    const fileInput = document.getElementById('fileInput');
    const voiceSelect = document.getElementById('voiceSelect');
    const rate = document.getElementById('rate');
    const rateValue = document.getElementById('rateValue');
    const pitch = document.getElementById('pitch');
    const pitchValue = document.getElementById('pitchValue');
    const playBtn = document.getElementById('playBtn');
    const pauseBtn = document.getElementById('pauseBtn');
    const resumeBtn = document.getElementById('resumeBtn');
    const stopBtn = document.getElementById('stopBtn');
    const rewindBtn = document.getElementById('rewindBtn');

    let voices = [];
    let utterance;

    function populateVoiceList() {
      voices = speechSynthesis.getVoices();
      voiceSelect.innerHTML = '';
      voices.forEach((voice, i) => {
        const option = document.createElement('option');
        option.textContent = `${voice.name} (${voice.lang})`;
        option.value = i;
        voiceSelect.appendChild(option);
      });
    }
    populateVoiceList();
    if (speechSynthesis.onvoiceschanged !== undefined) {
      speechSynthesis.onvoiceschanged = populateVoiceList;
    }

    rate.addEventListener('input', () => rateValue.textContent = rate.value);
    pitch.addEventListener('input', () => pitchValue.textContent = pitch.value);

    function speakText() {
      if(textInput.value.trim() === "") return;
      speechSynthesis.cancel();
      utterance = new SpeechSynthesisUtterance(textInput.value);
      utterance.voice = voices[voiceSelect.value];
      utterance.rate = rate.value;
      utterance.pitch = pitch.value;
      speechSynthesis.speak(utterance);
    }

    playBtn.addEventListener('click', speakText);
    pauseBtn.addEventListener('click', () => speechSynthesis.pause());
    resumeBtn.addEventListener('click', () => speechSynthesis.resume());
    stopBtn.addEventListener('click', () => speechSynthesis.cancel());
    rewindBtn.addEventListener('click', speakText);

    // File upload handling
    fileInput.addEventListener('change', async (e) => {
      const file = e.target.files[0];
      if(!file) return;
      if(file.name.endsWith('.txt')) {
        const text = await file.text();
        textInput.value = text;
      } else if(file.name.endsWith('.docx')) {
        const arrayBuffer = await file.arrayBuffer();
        const result = await mammoth.extractRawText({arrayBuffer});
        textInput.value = result.value;
      } else {
        alert('Unsupported file type. Please upload .txt or .docx');
      }
    });
  </script>
</body>
</html>
